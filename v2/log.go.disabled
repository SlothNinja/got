package main

import (
	"html/template"
	"time"

	"github.com/SlothNinja/sn/v2"
)

// Entry stores information about a move in the game log.
type Entry struct {
	sn.Entry
}

// GameLog stores entries of the game log.
type GameLog []Entryer

// Entryer specifies the interface for entries of the game log.
type Entryer interface {
	PhaseName() string
	Turn() int
	Round() int
	CreatedAt() time.Time
	HTML(g *GCommited) template.HTML
}

func (g *GCommited) newEntry() (e *Entry) {
	e = new(Entry)
	e.PlayerID = sn.NoPlayerID
	e.OtherPlayerID = sn.NoPlayerID
	e.TurnF = g.Turn
	// e.PhaseF = g.Phase
	// e.SubPhaseF = g.SubPhase
	e.RoundF = g.Round
	e.CreatedAtF = time.Now()
	return
}

func (g *GCommited) newEntryFor(p *Player) (e *Entry) {
	e = g.newEntry()
	e.PlayerID = p.ID
	return
}

// // PhaseName displays the turn and phase in an entry of the game log.
// func (e *Entry) PhaseName() string {
// 	return fmt.Sprintf("Turn %d | Phase: %s", e.Turn(), phaseNames[e.Phase()])
// }
